name: API Application CI

on: 
  push:
  pull_request:
    branches:    
      - 'main'
    paths:
      - 'applications/api/*'
      - 'infrastructure/api/*'
env:
  DOCKER_IMAGE: '${{ secrets.DOCKERHUB_USERNAME }}/descomplica-api:${{ github.sha }}'
  
jobs:
  ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: applications/api/
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Load Docker cache layers
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true

      - name: Build Docker image
        env:
          DOCKER_BUILDKIT: 1
        run: docker image build . --file Dockerfile --tag ${{ env.DOCKER_IMAGE }}

      - name: Test Application
        run: docker container run --rm ${{ env.DOCKER_IMAGE }} yarn test
        # Continuar, pois n√£o foi implementado tests com jest
        continue-on-error: true
      
      - name: Run Snyk to check Docker image for vulnerabilities
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: your/image-to-test
          args: --file=applications/api/Dockerfile

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push to docker repository
        run: docker image push ${{ env.DOCKER_IMAGE }}

  cd:
    runs-on: ubuntu-latest
    needs: [ ci ]
    defaults:
      run:
        working-directory: infrastructure/api/
    steps:
      - name: Checkout                                  
        uses: actions/checkout@v2 
        
      - name: Configure AWS credentials                          
        uses: aws-actions/configure-aws-credentials@v1           
        with:                                                    
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}        
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}        
          
      - name: Create kubeconfig
        run: aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.CLUSTER_NAME }}

      - name: Upgrade/Install on cluster
        run: helm upgrade --install api ./ --set container.image=${{ env.DOCKER_IMAGE }}